[{"id":26563,"uuid":"bd29a9e1d38901c4a41f","user":{"id":11132,"url_name":"makoto78sasaki","profile_image_url":"https://si0.twimg.com/profile_images/1907946718/icon0006_normal.jpg"},"title":"Redis の同点問題まとめ","created_at":"2013-09-10 01:12:24 +0900","updated_at":"2013-09-10 01:12:24 +0900","created_at_in_words":"7時間前","updated_at_in_words":"7時間前","tags":[{"name":"Redis","url_name":"redis","icon_url":"/icons/medium/missing.png","versions":[]}],"stock_count":2,"stock_users":["mozquito","h5y1m141@github"],"comment_count":0,"lgtm_count":0,"url":"http://qiita.com/makoto78sasaki/items/bd29a9e1d38901c4a41f","gist_url":null,"tweet":false,"private":false,"created_at_as_seconds":1378743144,"raw_body":"#何が問題なのか？\n\nSorted Sets 型データのコマンド ZRANK、ZREVRANK が、「同じスコアのメンバが複数存在する」という状況に対応していない。\n\n問題の再現方法は次のとおり。\n\n|順位| score |member|\n|:----:|:-------:|:------:|\n|1位|user1|500|\n|2位|user2|300|\n|2位|user3|300|\n|4位|user4|100|\n\n```\nredis 127.0.0.1:6379\u003E zadd ranking 500 user1\n(integer) 1\nredis 127.0.0.1:6379\u003E zadd ranking 300 user2\n(integer) 1\nredis 127.0.0.1:6379\u003E zadd ranking 300 user3\n(integer) 1\nredis 127.0.0.1:6379\u003E zadd ranking 100 user4\n(integer) 1\nredis 127.0.0.1:6379\u003E zrevrange ranking 0 -1 withscores\n1) \"user1\"\n2) \"500\"\n3) \"user3\"\n4) \"300\"\n5) \"user2\"\n6) \"300\"\n7) \"user4\"\n8) \"100\"\nredis 127.0.0.1:6379\u003E zrevrank ranking user1\n(integer) 0\nredis 127.0.0.1:6379\u003E zrevrank ranking user2\n(integer) 2\nredis 127.0.0.1:6379\u003E zrevrank ranking user3\n(integer) 1\nredis 127.0.0.1:6379\u003E zrevrank ranking user4\n(integer) 3\n```\n**zrevrank ranking user2 の戻り値が zrevrank ranking user3 の戻り値と同じ値にならない。**\n\n\n#この問題に対応したパッチがあたった Redis は既にある。\nhttps://github.com/Sylvain-Royer/redis/tree/unique_ties\n\n**この Redis では ZRANK、ZREVRANK コマンドで unique というオプションが使用できる。**\n\n```\nredis 127.0.0.1:6379\u003E zadd ranking 500 user1\n(integer) 1\nredis 127.0.0.1:6379\u003E zadd ranking 300 user2\n(integer) 1\nredis 127.0.0.1:6379\u003E zadd ranking 300 user3\n(integer) 1\nredis 127.0.0.1:6379\u003E zadd ranking 100 user4\n(integer) 1\nredis 127.0.0.1:6379\u003E zrevrange ranking 0 -1 withscores\n1) \"user1\"\n2) \"500\"\n3) \"user3\"\n4) \"300\"\n5) \"user2\"\n6) \"300\"\n7) \"user4\"\n8) \"100\"\nredis 127.0.0.1:6379\u003E zrevrank ranking user1 unique\n(integer) 0\nredis 127.0.0.1:6379\u003E zrevrank ranking user2 unique\n(integer) 1\nredis 127.0.0.1:6379\u003E zrevrank ranking user3 unique\n(integer) 1\nredis 127.0.0.1:6379\u003E zrevrank ranking user4 unique\n(integer) 3\n```\n\n**unique オプションを使用すると zrevrank ranking user2 の戻り値が zrevrank ranking user3 の戻り値と同じ値になる。**\n\n\n#いつこのパッチが正式に取り込まれるのか?\nhttps://github.com/antirez/redis/issues/943\n当初の予定よりも遅れて 3.0 で取り込まれる模様。\n\n\n#パッチが正式に取り込まれるまでの対応方法は？\nhttp://qiita.com/devhiroki/items/2fe81d691b94b6db795d\ndevhiroki さんが書かれているように「zscore + zcount」の二段階で順位を取得する。\n\nuser2 の順位の取得方法は次のとおり。\n(1) user2 のスコアを取得する。\n`zscore ranking user2`\n`\"300\"`\n(2) 300点よりも点数が大きいメンバの数を取得する。\n`zcount ranking (300 +inf`\n`1`\n(3) 上記 (2) で取得した値に 1 を加算した値が user2 の順位となる。\n`2`","body":"\u003Ch1\u003E\n        \u003Cspan id=\"1-1\" class=\"fragment\"\u003E\u003C/span\u003E\n        \u003Ca href=\"#1-1\"\u003E\u003Ci class=\"icon-link\"\u003E\u003C/i\u003E\u003C/a\u003E何が問題なのか？\n      \u003C/h1\u003E\u003Cp\u003ESorted Sets 型データのコマンド ZRANK、ZREVRANK が、「同じスコアのメンバが複数存在する」という状況に対応していない。\u003C/p\u003E\n\u003Cp\u003E問題の再現方法は次のとおり。\u003C/p\u003E\n\n\u003Ctable\u003E\u003Cthead\u003E\n\u003Ctr\u003E\n\u003Cth align=\"center\"\u003E順位\u003C/th\u003E\n\u003Cth align=\"center\"\u003Escore\u003C/th\u003E\n\u003Cth align=\"center\"\u003Emember\u003C/th\u003E\n\u003C/tr\u003E\n\u003C/thead\u003E\u003Ctbody\u003E\n\u003Ctr\u003E\n\u003Ctd align=\"center\"\u003E1位\u003C/td\u003E\n\u003Ctd align=\"center\"\u003Euser1\u003C/td\u003E\n\u003Ctd align=\"center\"\u003E500\u003C/td\u003E\n\u003C/tr\u003E\n\u003Ctr\u003E\n\u003Ctd align=\"center\"\u003E2位\u003C/td\u003E\n\u003Ctd align=\"center\"\u003Euser2\u003C/td\u003E\n\u003Ctd align=\"center\"\u003E300\u003C/td\u003E\n\u003C/tr\u003E\n\u003Ctr\u003E\n\u003Ctd align=\"center\"\u003E2位\u003C/td\u003E\n\u003Ctd align=\"center\"\u003Euser3\u003C/td\u003E\n\u003Ctd align=\"center\"\u003E300\u003C/td\u003E\n\u003C/tr\u003E\n\u003Ctr\u003E\n\u003Ctd align=\"center\"\u003E4位\u003C/td\u003E\n\u003Ctd align=\"center\"\u003Euser4\u003C/td\u003E\n\u003Ctd align=\"center\"\u003E100\u003C/td\u003E\n\u003C/tr\u003E\n\u003C/tbody\u003E\u003C/table\u003E\n\u003Cdiv class=\"code-frame\"\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003Eredis 127.0.0.1:6379\u0026gt; zadd ranking 500 user1\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; zadd ranking 300 user2\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; zadd ranking 300 user3\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; zadd ranking 100 user4\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; zrevrange ranking 0 -1 withscores\n1) \u0026quot;user1\u0026quot;\n2) \u0026quot;500\u0026quot;\n3) \u0026quot;user3\u0026quot;\n4) \u0026quot;300\u0026quot;\n5) \u0026quot;user2\u0026quot;\n6) \u0026quot;300\u0026quot;\n7) \u0026quot;user4\u0026quot;\n8) \u0026quot;100\u0026quot;\nredis 127.0.0.1:6379\u0026gt; zrevrank ranking user1\n(integer) 0\nredis 127.0.0.1:6379\u0026gt; zrevrank ranking user2\n(integer) 2\nredis 127.0.0.1:6379\u0026gt; zrevrank ranking user3\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; zrevrank ranking user4\n(integer) 3\n\u003C/pre\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003E\u003Cstrong\u003Ezrevrank ranking user2 の戻り値が zrevrank ranking user3 の戻り値と同じ値にならない。\u003C/strong\u003E\u003C/p\u003E\n\u003Ch1\u003E\n        \u003Cspan id=\"1-2\" class=\"fragment\"\u003E\u003C/span\u003E\n        \u003Ca href=\"#1-2\"\u003E\u003Ci class=\"icon-link\"\u003E\u003C/i\u003E\u003C/a\u003Eこの問題に対応したパッチがあたった Redis は既にある。\n      \u003C/h1\u003E\u003Cp\u003E\u003Ca href=\"https://github.com/Sylvain-Royer/redis/tree/unique_ties\" title=\"https://github.com/Sylvain-Royer/redis/tree/unique_ties\" target=\"_blank\"\u003Ehttps://github.com/Sylvain-Royer/redis/tree/unique_ties\u003C/a\u003E\u003C/p\u003E\n\u003Cp\u003E\u003Cstrong\u003Eこの Redis では ZRANK、ZREVRANK コマンドで unique というオプションが使用できる。\u003C/strong\u003E\u003C/p\u003E\n\u003Cdiv class=\"code-frame\"\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003Eredis 127.0.0.1:6379\u0026gt; zadd ranking 500 user1\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; zadd ranking 300 user2\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; zadd ranking 300 user3\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; zadd ranking 100 user4\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; zrevrange ranking 0 -1 withscores\n1) \u0026quot;user1\u0026quot;\n2) \u0026quot;500\u0026quot;\n3) \u0026quot;user3\u0026quot;\n4) \u0026quot;300\u0026quot;\n5) \u0026quot;user2\u0026quot;\n6) \u0026quot;300\u0026quot;\n7) \u0026quot;user4\u0026quot;\n8) \u0026quot;100\u0026quot;\nredis 127.0.0.1:6379\u0026gt; zrevrank ranking user1 unique\n(integer) 0\nredis 127.0.0.1:6379\u0026gt; zrevrank ranking user2 unique\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; zrevrank ranking user3 unique\n(integer) 1\nredis 127.0.0.1:6379\u0026gt; zrevrank ranking user4 unique\n(integer) 3\n\u003C/pre\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003E\u003Cstrong\u003Eunique オプションを使用すると zrevrank ranking user2 の戻り値が zrevrank ranking user3 の戻り値と同じ値になる。\u003C/strong\u003E\u003C/p\u003E\n\u003Ch1\u003E\n        \u003Cspan id=\"1-3\" class=\"fragment\"\u003E\u003C/span\u003E\n        \u003Ca href=\"#1-3\"\u003E\u003Ci class=\"icon-link\"\u003E\u003C/i\u003E\u003C/a\u003Eいつこのパッチが正式に取り込まれるのか?\n      \u003C/h1\u003E\u003Cp\u003E\u003Ca href=\"https://github.com/antirez/redis/issues/943\" title=\"https://github.com/antirez/redis/issues/943\" target=\"_blank\"\u003Ehttps://github.com/antirez/redis/issues/943\u003C/a\u003E\u003Cbr\u003E\n当初の予定よりも遅れて 3.0 で取り込まれる模様。\u003C/p\u003E\n\u003Ch1\u003E\n        \u003Cspan id=\"1-4\" class=\"fragment\"\u003E\u003C/span\u003E\n        \u003Ca href=\"#1-4\"\u003E\u003Ci class=\"icon-link\"\u003E\u003C/i\u003E\u003C/a\u003Eパッチが正式に取り込まれるまでの対応方法は？\n      \u003C/h1\u003E\u003Cp\u003E\u003Ca href=\"http://qiita.com/devhiroki/items/2fe81d691b94b6db795d\" title=\"http://qiita.com/devhiroki/items/2fe81d691b94b6db795d\" \u003Ehttp://qiita.com/devhiroki/items/2fe81d691b94b6db795d\u003C/a\u003E\u003Cbr\u003E\ndevhiroki さんが書かれているように「zscore + zcount」の二段階で順位を取得する。\u003C/p\u003E\n\u003Cp\u003Euser2 の順位の取得方法は次のとおり。\u003Cbr\u003E\n(1) user2 のスコアを取得する。\u003Cbr\u003E\n\u003Ccode\u003Ezscore ranking user2\u003C/code\u003E\u003Cbr\u003E\n\u003Ccode\u003E\u0026quot;300\u0026quot;\u003C/code\u003E\u003Cbr\u003E\n(2) 300点よりも点数が大きいメンバの数を取得する。\u003Cbr\u003E\n\u003Ccode\u003Ezcount ranking (300 +inf\u003C/code\u003E\u003Cbr\u003E\n\u003Ccode\u003E1\u003C/code\u003E\u003Cbr\u003E\n(3) 上記 (2) で取得した値に 1 を加算した値が user2 の順位となる。\u003Cbr\u003E\n\u003Ccode\u003E2\u003C/code\u003E\u003C/p\u003E\n"},{"id":26562,"uuid":"5cfd21c1ddbd826b8b81","user":{"id":3227,"url_name":"hnakamur","profile_image_url":"https://secure.gravatar.com/avatar/4e4c48b4adba29570d445ba1d181951c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"vagrantのprovisionerを自作する","created_at":"2013-09-10 01:09:27 +0900","updated_at":"2013-09-10 01:32:19 +0900","created_at_in_words":"7時間前","updated_at_in_words":"7時間前","tags":[{"name":"vagrant","url_name":"vagrant","icon_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-tag-image/1aceab77a3ab11d00db91be3ce58eabda35f7f15/medium.jpg?1364840360","versions":["1.3.1"]}],"stock_count":0,"stock_users":[],"comment_count":0,"lgtm_count":0,"url":"http://qiita.com/hnakamur/items/5cfd21c1ddbd826b8b81","gist_url":null,"tweet":true,"private":false,"created_at_as_seconds":1378742967,"raw_body":"vagrantのfabric provisionerを自作してみたので開発手順を書いておきます。\n[hnakamur/vagrant-fabric-provisioner](https://github.com/hnakamur/vagrant-fabric-provisioner)\n\n試行錯誤しながら作ったので、もっとよい方法があるかもしれません。その場合はぜひご指摘お願いします。\n\n## ひな形作成\n\ngemの名前を指定してbundle gemを実行します。\n\n```shell-session\n$ bundle gem vagrant-fabric-provisioner\n      create  vagrant-fabric-provisioner/Gemfile\n      create  vagrant-fabric-provisioner/Rakefile\n      create  vagrant-fabric-provisioner/LICENSE.txt\n      create  vagrant-fabric-provisioner/README.md\n      create  vagrant-fabric-provisioner/.gitignore\n      create  vagrant-fabric-provisioner/vagrant-fabric-provisioner.gemspec\n      create  vagrant-fabric-provisioner/lib/vagrant/fabric/provisioner.rb\n      create  vagrant-fabric-provisioner/lib/vagrant/fabric/provisioner/version.rb\n```\n\nvagrant-fabric-provisioner/lib/vagrant/fabric/provisioner.rb\nを\nvagrant-fabric-provisioner/lib/vagrant-fabric-provisioner.rb\nに、\nvagrant-fabric-provisioner/lib/vagrant/fabric/provisioner/\nを\nvagrant-fabric-provisioner/lib/vagrant-fabric-provisioner/\nにリネームします。これをしないとプラグインが実行されませんでした。\n\n## 実装\n\nビルトインのprovisionerのソース\nhttps://github.com/mitchellh/vagrant/tree/master/plugins/provisioners\nと\n親クラス\nhttps://github.com/mitchellh/vagrant/tree/master/lib/vagrant/plugin/v2\nのソースを参照しつつ、実装します。\n\n## プラグインのgemのビルド\n\ngemspecファイルを指定してgem buildを実行します。\n\n```shell-session\n$ gem build vagrant-fabric-provisioner.gemspec \nWARNING:  description and summary are identical\n  Successfully built RubyGem\n  Name: vagrant-fabric-provisioner\n  Version: 0.0.2\n  File: vagrant-fabric-provisioner-0.0.2.gem\n```\n\n## プラグインのgemのインストール\n\n```shell-session\n$ vagrant plugin install vagrant-fabric-provisioner-0.0.2.gem \nInstalling the 'vagrant-fabric-provisioner-0.0.2.gem' plugin. This can take a few minutes...\nInstalled the plugin 'vagrant-fabric-provisioner (0.0.2)'!\n```\n\n## プロビジョン実行\n\nVagrantfileには予め自分のprovisionerを実行するように設定しておきます。例えばvagrant-fabric-provisionerの場合はこんな感じです。\n\n```Vagrantfile\nVagrant.configure(\"2\") do |config|\n  config.vm.box = \"centos6.4\"\n  config.vm.network :private_network, ip: \"192.168.33.28\"\n  config.vm.provision :fabric do |s|\n    #s.uses_dynamic_port = true\n    #s.args = ['-D', '--colorize-errors', '-H', '127.0.0.1', 'show_hostname']\n    s.uses_dynamic_port = false\n    s.args = ['-D', '--colorize-errors', '-H', '192.168.33.28', 'show_hostname']\n  end\nend\n```\n\n対象のVMは予め予めvagrant upで起動しておきます。\n\nVagrantfileのあるディレクトリで以下のコマンドを実行すればprovisionが走ります。\n\n```shell-provision\n$ vagrant provision\n```\n\n## 試行錯誤\n\nプラグインは~/.vagrant.d/gems/gems/以下にインストールされています。\nこの例では~/.vagrant.d/gems/gems/vagrant-fabric-provisioner-0.0.2/です。\nこのディレクトリ内のprovisionerのrubyソース（この例ではlib/vagrant-fabric-provisioner/provisioner.rb）を編集して、```vagrant provision```を実行すれば編集した内容で実行できました。","body":"\u003Cp\u003Evagrantのfabric provisionerを自作してみたので開発手順を書いておきます。\u003Cbr\u003E\n\u003Ca href=\"https://github.com/hnakamur/vagrant-fabric-provisioner\" title=\"https://github.com/hnakamur/vagrant-fabric-provisioner\" target=\"_blank\"\u003Ehnakamur/vagrant-fabric-provisioner\u003C/a\u003E\u003C/p\u003E\n\u003Cp\u003E試行錯誤しながら作ったので、もっとよい方法があるかもしれません。その場合はぜひご指摘お願いします。\u003C/p\u003E\n\u003Ch2\u003E\n        \u003Cspan id=\"2-1\" class=\"fragment\"\u003E\u003C/span\u003E\n        \u003Ca href=\"#2-1\"\u003E\u003Ci class=\"icon-link\"\u003E\u003C/i\u003E\u003C/a\u003Eひな形作成\n      \u003C/h2\u003E\u003Cp\u003Egemの名前を指定してbundle gemを実行します。\u003C/p\u003E\n\u003Cdiv class=\"code-frame\"\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Cspan class=\"go\"\u003E$ bundle gem vagrant-fabric-provisioner\u003C/span\u003E\n\u003Cspan class=\"go\"\u003E      create  vagrant-fabric-provisioner/Gemfile\u003C/span\u003E\n\u003Cspan class=\"go\"\u003E      create  vagrant-fabric-provisioner/Rakefile\u003C/span\u003E\n\u003Cspan class=\"go\"\u003E      create  vagrant-fabric-provisioner/LICENSE.txt\u003C/span\u003E\n\u003Cspan class=\"go\"\u003E      create  vagrant-fabric-provisioner/README.md\u003C/span\u003E\n\u003Cspan class=\"go\"\u003E      create  vagrant-fabric-provisioner/.gitignore\u003C/span\u003E\n\u003Cspan class=\"go\"\u003E      create  vagrant-fabric-provisioner/vagrant-fabric-provisioner.gemspec\u003C/span\u003E\n\u003Cspan class=\"go\"\u003E      create  vagrant-fabric-provisioner/lib/vagrant/fabric/provisioner.rb\u003C/span\u003E\n\u003Cspan class=\"go\"\u003E      create  vagrant-fabric-provisioner/lib/vagrant/fabric/provisioner/version.rb\u003C/span\u003E\n\u003C/pre\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003Evagrant-fabric-provisioner/lib/vagrant/fabric/provisioner.rb\u003Cbr\u003E\nを\u003Cbr\u003E\nvagrant-fabric-provisioner/lib/vagrant-fabric-provisioner.rb\u003Cbr\u003E\nに、\u003Cbr\u003E\nvagrant-fabric-provisioner/lib/vagrant/fabric/provisioner/\u003Cbr\u003E\nを\u003Cbr\u003E\nvagrant-fabric-provisioner/lib/vagrant-fabric-provisioner/\u003Cbr\u003E\nにリネームします。これをしないとプラグインが実行されませんでした。\u003C/p\u003E\n\u003Ch2\u003E\n        \u003Cspan id=\"2-2\" class=\"fragment\"\u003E\u003C/span\u003E\n        \u003Ca href=\"#2-2\"\u003E\u003Ci class=\"icon-link\"\u003E\u003C/i\u003E\u003C/a\u003E実装\n      \u003C/h2\u003E\u003Cp\u003Eビルトインのprovisionerのソース\u003Cbr\u003E\n\u003Ca href=\"https://github.com/mitchellh/vagrant/tree/master/plugins/provisioners\" title=\"https://github.com/mitchellh/vagrant/tree/master/plugins/provisioners\" target=\"_blank\"\u003Ehttps://github.com/mitchellh/vagrant/tree/master/plugins/provisioners\u003C/a\u003E\u003Cbr\u003E\nと\u003Cbr\u003E\n親クラス\u003Cbr\u003E\n\u003Ca href=\"https://github.com/mitchellh/vagrant/tree/master/lib/vagrant/plugin/v2\" title=\"https://github.com/mitchellh/vagrant/tree/master/lib/vagrant/plugin/v2\" target=\"_blank\"\u003Ehttps://github.com/mitchellh/vagrant/tree/master/lib/vagrant/plugin/v2\u003C/a\u003E\u003Cbr\u003E\nのソースを参照しつつ、実装します。\u003C/p\u003E\n\u003Ch2\u003E\n        \u003Cspan id=\"2-3\" class=\"fragment\"\u003E\u003C/span\u003E\n        \u003Ca href=\"#2-3\"\u003E\u003Ci class=\"icon-link\"\u003E\u003C/i\u003E\u003C/a\u003Eプラグインのgemのビルド\n      \u003C/h2\u003E\u003Cp\u003Egemspecファイルを指定してgem buildを実行します。\u003C/p\u003E\n\u003Cdiv class=\"code-frame\"\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Cspan class=\"go\"\u003E$ gem build vagrant-fabric-provisioner.gemspec \u003C/span\u003E\n\u003Cspan class=\"go\"\u003EWARNING:  description and summary are identical\u003C/span\u003E\n\u003Cspan class=\"go\"\u003E  Successfully built RubyGem\u003C/span\u003E\n\u003Cspan class=\"go\"\u003E  Name: vagrant-fabric-provisioner\u003C/span\u003E\n\u003Cspan class=\"go\"\u003E  Version: 0.0.2\u003C/span\u003E\n\u003Cspan class=\"go\"\u003E  File: vagrant-fabric-provisioner-0.0.2.gem\u003C/span\u003E\n\u003C/pre\u003E\u003C/div\u003E\u003C/div\u003E\u003Ch2\u003E\n        \u003Cspan id=\"2-4\" class=\"fragment\"\u003E\u003C/span\u003E\n        \u003Ca href=\"#2-4\"\u003E\u003Ci class=\"icon-link\"\u003E\u003C/i\u003E\u003C/a\u003Eプラグインのgemのインストール\n      \u003C/h2\u003E\u003Cdiv class=\"code-frame\"\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Cspan class=\"go\"\u003E$ vagrant plugin install vagrant-fabric-provisioner-0.0.2.gem \u003C/span\u003E\n\u003Cspan class=\"go\"\u003EInstalling the \u0026#39;vagrant-fabric-provisioner-0.0.2.gem\u0026#39; plugin. This can take a few minutes...\u003C/span\u003E\n\u003Cspan class=\"go\"\u003EInstalled the plugin \u0026#39;vagrant-fabric-provisioner (0.0.2)\u0026#39;!\u003C/span\u003E\n\u003C/pre\u003E\u003C/div\u003E\u003C/div\u003E\u003Ch2\u003E\n        \u003Cspan id=\"2-5\" class=\"fragment\"\u003E\u003C/span\u003E\n        \u003Ca href=\"#2-5\"\u003E\u003Ci class=\"icon-link\"\u003E\u003C/i\u003E\u003C/a\u003Eプロビジョン実行\n      \u003C/h2\u003E\u003Cp\u003EVagrantfileには予め自分のprovisionerを実行するように設定しておきます。例えばvagrant-fabric-provisionerの場合はこんな感じです。\u003C/p\u003E\n\u003Cdiv class=\"code-frame\"\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003EVagrant.configure(\u0026quot;2\u0026quot;) do |config|\n  config.vm.box = \u0026quot;centos6.4\u0026quot;\n  config.vm.network :private_network, ip: \u0026quot;192.168.33.28\u0026quot;\n  config.vm.provision :fabric do |s|\n    #s.uses_dynamic_port = true\n    #s.args = [\u0026#39;-D\u0026#39;, \u0026#39;--colorize-errors\u0026#39;, \u0026#39;-H\u0026#39;, \u0026#39;127.0.0.1\u0026#39;, \u0026#39;show_hostname\u0026#39;]\n    s.uses_dynamic_port = false\n    s.args = [\u0026#39;-D\u0026#39;, \u0026#39;--colorize-errors\u0026#39;, \u0026#39;-H\u0026#39;, \u0026#39;192.168.33.28\u0026#39;, \u0026#39;show_hostname\u0026#39;]\n  end\nend\n\u003C/pre\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003E対象のVMは予め予めvagrant upで起動しておきます。\u003C/p\u003E\n\u003Cp\u003EVagrantfileのあるディレクトリで以下のコマンドを実行すればprovisionが走ります。\u003C/p\u003E\n\u003Cdiv class=\"code-frame\"\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E$ vagrant provision\n\u003C/pre\u003E\u003C/div\u003E\u003C/div\u003E\u003Ch2\u003E\n        \u003Cspan id=\"2-6\" class=\"fragment\"\u003E\u003C/span\u003E\n        \u003Ca href=\"#2-6\"\u003E\u003Ci class=\"icon-link\"\u003E\u003C/i\u003E\u003C/a\u003E試行錯誤\n      \u003C/h2\u003E\u003Cp\u003Eプラグインは~/.vagrant.d/gems/gems/以下にインストールされています。\u003Cbr\u003E\nこの例では~/.vagrant.d/gems/gems/vagrant-fabric-provisioner-0.0.2/です。\u003Cbr\u003E\nこのディレクトリ内のprovisionerのrubyソース（この例ではlib/vagrant-fabric-provisioner/provisioner.rb）を編集して、\u003Ccode\u003Evagrant provision\u003C/code\u003Eを実行すれば編集した内容で実行できました。\u003C/p\u003E\n"},{"id":26561,"uuid":"6345b1c310bf0c6facd3","user":{"id":11321,"url_name":"ANTON072","profile_image_url":"https://secure.gravatar.com/avatar/dcf6b3a03ba7a4110705d0847e4fca16?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"title":" クロージャを使って関数Aを拡張","created_at":"2013-09-10 01:01:20 +0900","updated_at":"2013-09-10 01:01:20 +0900","created_at_in_words":"7時間前","updated_at_in_words":"7時間前","tags":[{"name":"JavaScript","url_name":"javascript","icon_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-tag-image/c01023cf926d47b711747c9d00b00fd18dc6638a/medium.jpg?1364837881","versions":[]}],"stock_count":0,"stock_users":[],"comment_count":0,"lgtm_count":0,"url":"http://qiita.com/ANTON072/items/6345b1c310bf0c6facd3","gist_url":null,"tweet":false,"private":false,"created_at_as_seconds":1378742480,"raw_body":"```js\nfunction testA() {\n\treturn \"A\";\n}\n\nfunction testB() {\n\treturn function() {\n\t\treturn testA() + \"B\";\n\t}\n}\n\ntestC = testB();\n\nconsole.log( testC() );\n```","body":"\u003Cdiv class=\"code-frame\"\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Cspan class=\"kd\"\u003Efunction\u003C/span\u003E \u003Cspan class=\"nx\"\u003EtestA\u003C/span\u003E\u003Cspan class=\"p\"\u003E()\u003C/span\u003E \u003Cspan class=\"p\"\u003E{\u003C/span\u003E\n    \u003Cspan class=\"k\"\u003Ereturn\u003C/span\u003E \u003Cspan class=\"s2\"\u003E\u0026quot;A\u0026quot;\u003C/span\u003E\u003Cspan class=\"p\"\u003E;\u003C/span\u003E\n\u003Cspan class=\"p\"\u003E}\u003C/span\u003E\n\n\u003Cspan class=\"kd\"\u003Efunction\u003C/span\u003E \u003Cspan class=\"nx\"\u003EtestB\u003C/span\u003E\u003Cspan class=\"p\"\u003E()\u003C/span\u003E \u003Cspan class=\"p\"\u003E{\u003C/span\u003E\n    \u003Cspan class=\"k\"\u003Ereturn\u003C/span\u003E \u003Cspan class=\"kd\"\u003Efunction\u003C/span\u003E\u003Cspan class=\"p\"\u003E()\u003C/span\u003E \u003Cspan class=\"p\"\u003E{\u003C/span\u003E\n        \u003Cspan class=\"k\"\u003Ereturn\u003C/span\u003E \u003Cspan class=\"nx\"\u003EtestA\u003C/span\u003E\u003Cspan class=\"p\"\u003E()\u003C/span\u003E \u003Cspan class=\"o\"\u003E+\u003C/span\u003E \u003Cspan class=\"s2\"\u003E\u0026quot;B\u0026quot;\u003C/span\u003E\u003Cspan class=\"p\"\u003E;\u003C/span\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C/span\u003E\n\u003Cspan class=\"p\"\u003E}\u003C/span\u003E\n\n\u003Cspan class=\"nx\"\u003EtestC\u003C/span\u003E \u003Cspan class=\"o\"\u003E=\u003C/span\u003E \u003Cspan class=\"nx\"\u003EtestB\u003C/span\u003E\u003Cspan class=\"p\"\u003E();\u003C/span\u003E\n\n\u003Cspan class=\"nx\"\u003Econsole\u003C/span\u003E\u003Cspan class=\"p\"\u003E.\u003C/span\u003E\u003Cspan class=\"nx\"\u003Elog\u003C/span\u003E\u003Cspan class=\"p\"\u003E(\u003C/span\u003E \u003Cspan class=\"nx\"\u003EtestC\u003C/span\u003E\u003Cspan class=\"p\"\u003E()\u003C/span\u003E \u003Cspan class=\"p\"\u003E);\u003C/span\u003E\n\u003C/pre\u003E\u003C/div\u003E\u003C/div\u003E"},{"id":26559,"uuid":"23248b7290d8140f53fc","user":{"id":12542,"url_name":"inarin","profile_image_url":"https://secure.gravatar.com/avatar/8e0eb11a635d5f0f0434406718ee3c3b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"title":"Google Apps Scriptでスクレイピングする方法","created_at":"2013-09-10 00:26:34 +0900","updated_at":"2013-09-10 00:39:36 +0900","created_at_in_words":"8時間前","updated_at_in_words":"8時間前","tags":[{"name":"google","url_name":"google","icon_url":"/icons/medium/missing.png","versions":[]},{"name":"GoogleAppsScript","url_name":"googleappsscript","icon_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-tag-image/60442c9288d0986c20ba58f1b92e1f9fce317531/medium.jpg?1364840128","versions":[]}],"stock_count":4,"stock_users":["k0ta0uchi","tominagamichiya","h5y1m141@github","YusukeHirao"],"comment_count":0,"lgtm_count":0,"url":"http://qiita.com/inarin/items/23248b7290d8140f53fc","gist_url":null,"tweet":false,"private":false,"created_at_as_seconds":1378740394,"raw_body":"\n##Google Apps Scriptとは？\n\n以下の記事見ながら触ってみるとなんとなくわかります。\n\n- [無料でCron！Google Apps Scriptで時間を指定してURLをリクエスト。 | きじとら](http://kijtra.com/article/cron-by-google-apps-script)\n\n\n\n##正規表現を使えばスクレイピングできる\n\n以下の記事見て、うおーっと思ったけどなんか違った。\n\n- [Google DocsでWebスクレイピング:Logic+Idea](http://kaniku.seesaa.net/article/212479636.html)\n\nできないのかなーと色々試してたらできた。\n\n```コード.gs\nfunction myFunction() {\n  var response = UrlFetchApp.fetch(\"http://qiita.com\");\n\n  var myRegexp = /\u003Ctitle\u003E([\\s\\S]*?)\u003C\\/title\u003E/i;\n  var match = myRegexp.exec(response.getContentText());\n  var title = match[1];\n\n  title = title.replace(/(^\\s+)|(\\s+$)/g, \"\");\n  Logger.log(title);\n}\n```\n\nログの出力\n\n```\n[13-09-10 00:00:49:130 JST] Qiita [キータ] - プログラマの技術情報共有サービス\n```\n\n- [javascript - Google Apps Script Regex exec() returning null - Stack Overflow](http://stackoverflow.com/questions/16961953/google-apps-script-regex-exec-returning-null)\n- [googleのtitleを取得するプログラム（正規表現） - Hexaの日記](http://d.hatena.ne.jp/Hexa/20060610/1149954511)\n- [PHPでWEBページのタイトルを抜き出すサンプル [C!]](http://creazy.net/2008/05/php_get_page_title_sample.html)\n- [複数行にマッチさせる正規表現 | You Look Too Cool](http://stabucky.com/wp/archives/4334)\n- [Javascript で trim するには - Enjoi Blog](http://blog.enjoitech.jp/article/180)\n\n\n\n\n##Googleの検索結果を出してみる\n\n```コード.gs\nfunction myFunction() {\n  var response = UrlFetchApp.fetch(\"http://www.google.co.jp/search?q=qiita\");\n\n  var myRegexp = /\u003Ch3 class=\\\"r\\\"\u003E([\\s\\S]*?)\u003C\\/h3\u003E/gi;\n  var elems = response.getContentText().match(myRegexp);\n  for(var i in elems) {\n    var title = elems[i]\n    title = title.replace(/(^\\s+)|(\\s+$)/g, \"\");\n    title = title.replace(/\u003C\\/?[^\u003E]+\u003E/gi, \"\");\n    Logger.log(title);\n  }\n}\n```\n\nログの出力\n\n```\n[13-09-10 00:08:56:438 JST] Qiita [キータ] - プログラマの技術情報共有サービス\n[13-09-10 00:08:56:439 JST] Qiita APIドキュメント\n[13-09-10 00:08:56:439 JST] タグ一覧\n[13-09-10 00:08:56:439 JST] The Official Qiita Blog\n[13-09-10 00:08:56:439 JST] Qiita:Career\n[13-09-10 00:08:56:440 JST] Qiitaについて\n[13-09-10 00:08:56:440 JST] Qiita:Team\n[13-09-10 00:08:56:440 JST] キータ (Qiita) on Twitter\n[13-09-10 00:08:56:440 JST] Qiita(キータ) | Facebook\n[13-09-10 00:08:56:441 JST] 「Qiita」とそのビジネスとは - SD Japan | (株)スタートアップ・デイティング\n[13-09-10 00:08:56:441 JST] ニュースリリース: プログラマのための技術情報共有サイト「Qiita(キータ ...\n[13-09-10 00:08:56:441 JST] Qiita 2-day Hackathon | PeaTiX\n[13-09-10 00:08:56:442 JST] Qiita AWS Tools Hackathon | PeaTiX\n```\n\n- [ダブルクォーテーションのreplaceの方法 - JavaScript - 教えて！goo](http://oshiete.goo.ne.jp/qa/342029.html)\n- [片鱗懐古のブログ: Rhinoのフィルタ演算は正規表現じゃなくても良かった](http://pieceofnostalgy.blogspot.jp/2011/03/rhino_13.html)\n- [HTMLタグを除去 - Tatsuya Wiki](https://sites.google.com/site/tatsuyafukata/pg/javascript/remove-html-tag)\n- [[JavaScript]String.matchとRegExp.execと後方参照 - chalcedonyの外部記憶装置・出張版](http://d.hatena.ne.jp/chalcedony_htn/20090315/1237121111)\n\n##感想\n\nこれで定期的にサイトをチェックして特定のキーワードがあったらメールするとかのプログラムが簡単に書けそう。\n","body":"\u003Ch2\u003E\n        \u003Cspan id=\"2-1\" class=\"fragment\"\u003E\u003C/span\u003E\n        \u003Ca href=\"#2-1\"\u003E\u003Ci class=\"icon-link\"\u003E\u003C/i\u003E\u003C/a\u003EGoogle Apps Scriptとは？\n      \u003C/h2\u003E\u003Cp\u003E以下の記事見ながら触ってみるとなんとなくわかります。\u003C/p\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"http://kijtra.com/article/cron-by-google-apps-script\" title=\"http://kijtra.com/article/cron-by-google-apps-script\" target=\"_blank\"\u003E無料でCron！Google Apps Scriptで時間を指定してURLをリクエスト。 | きじとら\u003C/a\u003E\u003C/li\u003E\n\u003C/ul\u003E\n\u003Ch2\u003E\n        \u003Cspan id=\"2-2\" class=\"fragment\"\u003E\u003C/span\u003E\n        \u003Ca href=\"#2-2\"\u003E\u003Ci class=\"icon-link\"\u003E\u003C/i\u003E\u003C/a\u003E正規表現を使えばスクレイピングできる\n      \u003C/h2\u003E\u003Cp\u003E以下の記事見て、うおーっと思ったけどなんか違った。\u003C/p\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"http://kaniku.seesaa.net/article/212479636.html\" title=\"http://kaniku.seesaa.net/article/212479636.html\" target=\"_blank\"\u003EGoogle DocsでWebスクレイピング:Logic+Idea\u003C/a\u003E\u003C/li\u003E\n\u003C/ul\u003E\n\u003Cp\u003Eできないのかなーと色々試してたらできた。\u003C/p\u003E\n\u003Cdiv class=\"code-frame\"\u003E\u003Cdiv class=\"code-lang\"\u003E\u003Cspan class=\"bold\"\u003Eコード.gs\u003C/span\u003E\u003C/div\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Cspan class=\"kd\"\u003Efunction\u003C/span\u003E \u003Cspan class=\"nf\"\u003EmyFunction\u003C/span\u003E\u003Cspan class=\"o\"\u003E()\u003C/span\u003E \u003Cspan class=\"o\"\u003E{\u003C/span\u003E\n  \u003Cspan class=\"kd\"\u003Evar\u003C/span\u003E \u003Cspan class=\"n\"\u003Eresponse\u003C/span\u003E \u003Cspan class=\"o\"\u003E=\u003C/span\u003E \u003Cspan class=\"n\"\u003EUrlFetchApp\u003C/span\u003E\u003Cspan class=\"o\"\u003E.\u003C/span\u003E\u003Cspan class=\"na\"\u003Efetch\u003C/span\u003E\u003Cspan class=\"o\"\u003E(\u003C/span\u003E\u003Cspan class=\"s\"\u003E\u0026quot;http://qiita.com\u0026quot;\u003C/span\u003E\u003Cspan class=\"o\"\u003E);\u003C/span\u003E\n\n  \u003Cspan class=\"kd\"\u003Evar\u003C/span\u003E \u003Cspan class=\"n\"\u003EmyRegexp\u003C/span\u003E \u003Cspan class=\"o\"\u003E=\u003C/span\u003E \u003Cspan class=\"o\"\u003E/\u0026lt;\u003C/span\u003E\u003Cspan class=\"n\"\u003Etitle\u003C/span\u003E\u003Cspan class=\"o\"\u003E\u0026gt;([\\\u003C/span\u003E\u003Cspan class=\"n\"\u003Es\u003C/span\u003E\u003Cspan class=\"o\"\u003E\\\u003C/span\u003E\u003Cspan class=\"n\"\u003ES\u003C/span\u003E\u003Cspan class=\"o\"\u003E]*?)\u0026lt;\\/\u003C/span\u003E\u003Cspan class=\"n\"\u003Etitle\u003C/span\u003E\u003Cspan class=\"o\"\u003E\u0026gt;/\u003C/span\u003E\u003Cspan class=\"n\"\u003Ei\u003C/span\u003E\u003Cspan class=\"o\"\u003E;\u003C/span\u003E\n  \u003Cspan class=\"kd\"\u003Evar\u003C/span\u003E \u003Cspan class=\"n\"\u003Ematch\u003C/span\u003E \u003Cspan class=\"o\"\u003E=\u003C/span\u003E \u003Cspan class=\"n\"\u003EmyRegexp\u003C/span\u003E\u003Cspan class=\"o\"\u003E.\u003C/span\u003E\u003Cspan class=\"na\"\u003Eexec\u003C/span\u003E\u003Cspan class=\"o\"\u003E(\u003C/span\u003E\u003Cspan class=\"n\"\u003Eresponse\u003C/span\u003E\u003Cspan class=\"o\"\u003E.\u003C/span\u003E\u003Cspan class=\"na\"\u003EgetContentText\u003C/span\u003E\u003Cspan class=\"o\"\u003E());\u003C/span\u003E\n  \u003Cspan class=\"kd\"\u003Evar\u003C/span\u003E \u003Cspan class=\"n\"\u003Etitle\u003C/span\u003E \u003Cspan class=\"o\"\u003E=\u003C/span\u003E \u003Cspan class=\"n\"\u003Ematch\u003C/span\u003E\u003Cspan class=\"o\"\u003E[\u003C/span\u003E\u003Cspan class=\"mi\"\u003E1\u003C/span\u003E\u003Cspan class=\"o\"\u003E];\u003C/span\u003E\n\n  \u003Cspan class=\"n\"\u003Etitle\u003C/span\u003E \u003Cspan class=\"o\"\u003E=\u003C/span\u003E \u003Cspan class=\"n\"\u003Etitle\u003C/span\u003E\u003Cspan class=\"o\"\u003E.\u003C/span\u003E\u003Cspan class=\"na\"\u003Ereplace\u003C/span\u003E\u003Cspan class=\"o\"\u003E(/(^\\\u003C/span\u003E\u003Cspan class=\"n\"\u003Es\u003C/span\u003E\u003Cspan class=\"o\"\u003E+)|(\\\u003C/span\u003E\u003Cspan class=\"n\"\u003Es\u003C/span\u003E\u003Cspan class=\"o\"\u003E+\u003C/span\u003E\u003Cspan class=\"n\"\u003E$\u003C/span\u003E\u003Cspan class=\"o\"\u003E)/\u003C/span\u003E\u003Cspan class=\"n\"\u003Eg\u003C/span\u003E\u003Cspan class=\"o\"\u003E,\u003C/span\u003E \u003Cspan class=\"s\"\u003E\u0026quot;\u0026quot;\u003C/span\u003E\u003Cspan class=\"o\"\u003E);\u003C/span\u003E\n  \u003Cspan class=\"n\"\u003ELogger\u003C/span\u003E\u003Cspan class=\"o\"\u003E.\u003C/span\u003E\u003Cspan class=\"na\"\u003Elog\u003C/span\u003E\u003Cspan class=\"o\"\u003E(\u003C/span\u003E\u003Cspan class=\"n\"\u003Etitle\u003C/span\u003E\u003Cspan class=\"o\"\u003E);\u003C/span\u003E\n\u003Cspan class=\"o\"\u003E}\u003C/span\u003E\n\u003C/pre\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003Eログの出力\u003C/p\u003E\n\u003Cdiv class=\"code-frame\"\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E[13-09-10 00:00:49:130 JST] Qiita [キータ] - プログラマの技術情報共有サービス\n\u003C/pre\u003E\u003C/div\u003E\u003C/div\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"http://stackoverflow.com/questions/16961953/google-apps-script-regex-exec-returning-null\" title=\"http://stackoverflow.com/questions/16961953/google-apps-script-regex-exec-returning-null\" target=\"_blank\"\u003Ejavascript - Google Apps Script Regex exec() returning null - Stack Overflow\u003C/a\u003E\u003C/li\u003E\n\u003Cli\u003E\u003Ca href=\"http://d.hatena.ne.jp/Hexa/20060610/1149954511\" title=\"http://d.hatena.ne.jp/Hexa/20060610/1149954511\" target=\"_blank\"\u003Egoogleのtitleを取得するプログラム（正規表現） - Hexaの日記\u003C/a\u003E\u003C/li\u003E\n\u003Cli\u003E\u003Ca href=\"http://creazy.net/2008/05/php_get_page_title_sample.html\" title=\"http://creazy.net/2008/05/php_get_page_title_sample.html\" target=\"_blank\"\u003EPHPでWEBページのタイトルを抜き出すサンプル [C!]\u003C/a\u003E\u003C/li\u003E\n\u003Cli\u003E\u003Ca href=\"http://stabucky.com/wp/archives/4334\" title=\"http://stabucky.com/wp/archives/4334\" target=\"_blank\"\u003E複数行にマッチさせる正規表現 | You Look Too Cool\u003C/a\u003E\u003C/li\u003E\n\u003Cli\u003E\u003Ca href=\"http://blog.enjoitech.jp/article/180\" title=\"http://blog.enjoitech.jp/article/180\" target=\"_blank\"\u003EJavascript で trim するには - Enjoi Blog\u003C/a\u003E\u003C/li\u003E\n\u003C/ul\u003E\n\u003Ch2\u003E\n        \u003Cspan id=\"2-3\" class=\"fragment\"\u003E\u003C/span\u003E\n        \u003Ca href=\"#2-3\"\u003E\u003Ci class=\"icon-link\"\u003E\u003C/i\u003E\u003C/a\u003EGoogleの検索結果を出してみる\n      \u003C/h2\u003E\u003Cdiv class=\"code-frame\"\u003E\u003Cdiv class=\"code-lang\"\u003E\u003Cspan class=\"bold\"\u003Eコード.gs\u003C/span\u003E\u003C/div\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Cspan class=\"kd\"\u003Efunction\u003C/span\u003E \u003Cspan class=\"nf\"\u003EmyFunction\u003C/span\u003E\u003Cspan class=\"o\"\u003E()\u003C/span\u003E \u003Cspan class=\"o\"\u003E{\u003C/span\u003E\n  \u003Cspan class=\"kd\"\u003Evar\u003C/span\u003E \u003Cspan class=\"n\"\u003Eresponse\u003C/span\u003E \u003Cspan class=\"o\"\u003E=\u003C/span\u003E \u003Cspan class=\"n\"\u003EUrlFetchApp\u003C/span\u003E\u003Cspan class=\"o\"\u003E.\u003C/span\u003E\u003Cspan class=\"na\"\u003Efetch\u003C/span\u003E\u003Cspan class=\"o\"\u003E(\u003C/span\u003E\u003Cspan class=\"s\"\u003E\u0026quot;http://www.google.co.jp/search?q=qiita\u0026quot;\u003C/span\u003E\u003Cspan class=\"o\"\u003E);\u003C/span\u003E\n\n  \u003Cspan class=\"kd\"\u003Evar\u003C/span\u003E \u003Cspan class=\"n\"\u003EmyRegexp\u003C/span\u003E \u003Cspan class=\"o\"\u003E=\u003C/span\u003E \u003Cspan class=\"o\"\u003E/\u0026lt;\u003C/span\u003E\u003Cspan class=\"n\"\u003Eh3\u003C/span\u003E \u003Cspan class=\"n\"\u003Eclass\u003C/span\u003E\u003Cspan class=\"o\"\u003E=\\\u003C/span\u003E\u003Cspan class=\"s\"\u003E\u0026quot;r\\\u0026quot;\u003C/span\u003E\u003Cspan class=\"o\"\u003E\u0026gt;([\\\u003C/span\u003E\u003Cspan class=\"n\"\u003Es\u003C/span\u003E\u003Cspan class=\"o\"\u003E\\\u003C/span\u003E\u003Cspan class=\"n\"\u003ES\u003C/span\u003E\u003Cspan class=\"o\"\u003E]*?)\u0026lt;\\/\u003C/span\u003E\u003Cspan class=\"n\"\u003Eh3\u003C/span\u003E\u003Cspan class=\"o\"\u003E\u0026gt;/\u003C/span\u003E\u003Cspan class=\"n\"\u003Egi\u003C/span\u003E\u003Cspan class=\"o\"\u003E;\u003C/span\u003E\n  \u003Cspan class=\"kd\"\u003Evar\u003C/span\u003E \u003Cspan class=\"n\"\u003Eelems\u003C/span\u003E \u003Cspan class=\"o\"\u003E=\u003C/span\u003E \u003Cspan class=\"n\"\u003Eresponse\u003C/span\u003E\u003Cspan class=\"o\"\u003E.\u003C/span\u003E\u003Cspan class=\"na\"\u003EgetContentText\u003C/span\u003E\u003Cspan class=\"o\"\u003E().\u003C/span\u003E\u003Cspan class=\"na\"\u003Ematch\u003C/span\u003E\u003Cspan class=\"o\"\u003E(\u003C/span\u003E\u003Cspan class=\"n\"\u003EmyRegexp\u003C/span\u003E\u003Cspan class=\"o\"\u003E);\u003C/span\u003E\n  \u003Cspan class=\"k\"\u003Efor\u003C/span\u003E\u003Cspan class=\"o\"\u003E(\u003C/span\u003E\u003Cspan class=\"kd\"\u003Evar\u003C/span\u003E \u003Cspan class=\"n\"\u003Ei\u003C/span\u003E \u003Cspan class=\"k\"\u003Ein\u003C/span\u003E \u003Cspan class=\"n\"\u003Eelems\u003C/span\u003E\u003Cspan class=\"o\"\u003E)\u003C/span\u003E \u003Cspan class=\"o\"\u003E{\u003C/span\u003E\n    \u003Cspan class=\"kd\"\u003Evar\u003C/span\u003E \u003Cspan class=\"n\"\u003Etitle\u003C/span\u003E \u003Cspan class=\"o\"\u003E=\u003C/span\u003E \u003Cspan class=\"n\"\u003Eelems\u003C/span\u003E\u003Cspan class=\"o\"\u003E[\u003C/span\u003E\u003Cspan class=\"n\"\u003Ei\u003C/span\u003E\u003Cspan class=\"o\"\u003E]\u003C/span\u003E\n    \u003Cspan class=\"n\"\u003Etitle\u003C/span\u003E \u003Cspan class=\"o\"\u003E=\u003C/span\u003E \u003Cspan class=\"n\"\u003Etitle\u003C/span\u003E\u003Cspan class=\"o\"\u003E.\u003C/span\u003E\u003Cspan class=\"na\"\u003Ereplace\u003C/span\u003E\u003Cspan class=\"o\"\u003E(/(^\\\u003C/span\u003E\u003Cspan class=\"n\"\u003Es\u003C/span\u003E\u003Cspan class=\"o\"\u003E+)|(\\\u003C/span\u003E\u003Cspan class=\"n\"\u003Es\u003C/span\u003E\u003Cspan class=\"o\"\u003E+\u003C/span\u003E\u003Cspan class=\"n\"\u003E$\u003C/span\u003E\u003Cspan class=\"o\"\u003E)/\u003C/span\u003E\u003Cspan class=\"n\"\u003Eg\u003C/span\u003E\u003Cspan class=\"o\"\u003E,\u003C/span\u003E \u003Cspan class=\"s\"\u003E\u0026quot;\u0026quot;\u003C/span\u003E\u003Cspan class=\"o\"\u003E);\u003C/span\u003E\n    \u003Cspan class=\"n\"\u003Etitle\u003C/span\u003E \u003Cspan class=\"o\"\u003E=\u003C/span\u003E \u003Cspan class=\"n\"\u003Etitle\u003C/span\u003E\u003Cspan class=\"o\"\u003E.\u003C/span\u003E\u003Cspan class=\"na\"\u003Ereplace\u003C/span\u003E\u003Cspan class=\"o\"\u003E(/\u0026lt;\\/?[^\u0026gt;]+\u0026gt;/\u003C/span\u003E\u003Cspan class=\"n\"\u003Egi\u003C/span\u003E\u003Cspan class=\"o\"\u003E,\u003C/span\u003E \u003Cspan class=\"s\"\u003E\u0026quot;\u0026quot;\u003C/span\u003E\u003Cspan class=\"o\"\u003E);\u003C/span\u003E\n    \u003Cspan class=\"n\"\u003ELogger\u003C/span\u003E\u003Cspan class=\"o\"\u003E.\u003C/span\u003E\u003Cspan class=\"na\"\u003Elog\u003C/span\u003E\u003Cspan class=\"o\"\u003E(\u003C/span\u003E\u003Cspan class=\"n\"\u003Etitle\u003C/span\u003E\u003Cspan class=\"o\"\u003E);\u003C/span\u003E\n  \u003Cspan class=\"o\"\u003E}\u003C/span\u003E\n\u003Cspan class=\"o\"\u003E}\u003C/span\u003E\n\u003C/pre\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003Eログの出力\u003C/p\u003E\n\u003Cdiv class=\"code-frame\"\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E[13-09-10 00:08:56:438 JST] Qiita [キータ] - プログラマの技術情報共有サービス\n[13-09-10 00:08:56:439 JST] Qiita APIドキュメント\n[13-09-10 00:08:56:439 JST] タグ一覧\n[13-09-10 00:08:56:439 JST] The Official Qiita Blog\n[13-09-10 00:08:56:439 JST] Qiita:Career\n[13-09-10 00:08:56:440 JST] Qiitaについて\n[13-09-10 00:08:56:440 JST] Qiita:Team\n[13-09-10 00:08:56:440 JST] キータ (Qiita) on Twitter\n[13-09-10 00:08:56:440 JST] Qiita(キータ) | Facebook\n[13-09-10 00:08:56:441 JST] 「Qiita」とそのビジネスとは - SD Japan | (株)スタートアップ・デイティング\n[13-09-10 00:08:56:441 JST] ニュースリリース: プログラマのための技術情報共有サイト「Qiita(キータ ...\n[13-09-10 00:08:56:441 JST] Qiita 2-day Hackathon | PeaTiX\n[13-09-10 00:08:56:442 JST] Qiita AWS Tools Hackathon | PeaTiX\n\u003C/pre\u003E\u003C/div\u003E\u003C/div\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"http://oshiete.goo.ne.jp/qa/342029.html\" title=\"http://oshiete.goo.ne.jp/qa/342029.html\" target=\"_blank\"\u003Eダブルクォーテーションのreplaceの方法 - JavaScript - 教えて！goo\u003C/a\u003E\u003C/li\u003E\n\u003Cli\u003E\u003Ca href=\"http://pieceofnostalgy.blogspot.jp/2011/03/rhino_13.html\" title=\"http://pieceofnostalgy.blogspot.jp/2011/03/rhino_13.html\" target=\"_blank\"\u003E片鱗懐古のブログ: Rhinoのフィルタ演算は正規表現じゃなくても良かった\u003C/a\u003E\u003C/li\u003E\n\u003Cli\u003E\u003Ca href=\"https://sites.google.com/site/tatsuyafukata/pg/javascript/remove-html-tag\" title=\"https://sites.google.com/site/tatsuyafukata/pg/javascript/remove-html-tag\" target=\"_blank\"\u003EHTMLタグを除去 - Tatsuya Wiki\u003C/a\u003E\u003C/li\u003E\n\u003Cli\u003E\u003Ca href=\"http://d.hatena.ne.jp/chalcedony_htn/20090315/1237121111\" title=\"http://d.hatena.ne.jp/chalcedony_htn/20090315/1237121111\" target=\"_blank\"\u003E[JavaScript]String.matchとRegExp.execと後方参照 - chalcedonyの外部記憶装置・出張版\u003C/a\u003E\u003C/li\u003E\n\u003C/ul\u003E\n\u003Ch2\u003E\n        \u003Cspan id=\"2-4\" class=\"fragment\"\u003E\u003C/span\u003E\n        \u003Ca href=\"#2-4\"\u003E\u003Ci class=\"icon-link\"\u003E\u003C/i\u003E\u003C/a\u003E感想\n      \u003C/h2\u003E\u003Cp\u003Eこれで定期的にサイトをチェックして特定のキーワードがあったらメールするとかのプログラムが簡単に書けそう。\u003C/p\u003E\n"},{"id":26558,"uuid":"67d48bc0442c1b788709","user":{"id":19475,"url_name":"ironsand","profile_image_url":"https://twimg0-a.akamaihd.net/profile_images/1473840161/favicon_normal.png"},"title":"Audacityを使ってWAVEファイルの音量を下げる","created_at":"2013-09-10 00:21:21 +0900","updated_at":"2013-09-10 00:21:21 +0900","created_at_in_words":"8時間前","updated_at_in_words":"8時間前","tags":[{"name":"Audacity","url_name":"audacity","icon_url":"/icons/medium/missing.png","versions":[]}],"stock_count":0,"stock_users":[],"comment_count":0,"lgtm_count":0,"url":"http://qiita.com/ironsand/items/67d48bc0442c1b788709","gist_url":null,"tweet":true,"private":false,"created_at_as_seconds":1378740081,"raw_body":"音声編集ソフト Audacity を使って wav の音量を下げる方法を解説します。\n\n\nまず音量を下げたいwavファイルを開いて\n\n`[Edit]-\u003E[Select]-\u003E[All]`\n\nで音声ファイルの全体を選択します。\nCtrl + A で選択しても構いません。\n\n次に[Effect]-\u003E[Amplify]を選択して \"Amplification (dB)\" の値を下げます。\n[File]-\u003E[Export As Wav] で適当なファイル名をつけて出力すれば作業は完了です。","body":"\u003Cp\u003E音声編集ソフト Audacity を使って wav の音量を下げる方法を解説します。\u003C/p\u003E\n\u003Cp\u003Eまず音量を下げたいwavファイルを開いて\u003C/p\u003E\n\u003Cp\u003E\u003Ccode\u003E[Edit]-\u003E[Select]-\u003E[All]\u003C/code\u003E\u003C/p\u003E\n\u003Cp\u003Eで音声ファイルの全体を選択します。\u003Cbr\u003E\nCtrl + A で選択しても構いません。\u003C/p\u003E\n\u003Cp\u003E次に[Effect]-\u003E[Amplify]を選択して \u0026quot;Amplification (dB)\u0026quot; の値を下げます。\u003Cbr\u003E\n[File]-\u003E[Export As Wav] で適当なファイル名をつけて出力すれば作業は完了です。\u003C/p\u003E\n"},{"id":26556,"uuid":"29a286190eb6f8619b0b","user":{"id":19475,"url_name":"ironsand","profile_image_url":"https://twimg0-a.akamaihd.net/profile_images/1473840161/favicon_normal.png"},"title":"MinGWでPlaysound()関数で音を鳴らす","created_at":"2013-09-10 00:15:25 +0900","updated_at":"2013-09-10 00:15:25 +0900","created_at_in_words":"8時間前","updated_at_in_words":"8時間前","tags":[{"name":"MinGW","url_name":"mingw","icon_url":"/icons/medium/missing.png","versions":[]}],"stock_count":0,"stock_users":[],"comment_count":0,"lgtm_count":0,"url":"http://qiita.com/ironsand/items/29a286190eb6f8619b0b","gist_url":null,"tweet":true,"private":false,"created_at_as_seconds":1378739725,"raw_body":"WinAPIを使って音を鳴らすには PlaySound()を使いますが、\nundefined reference to `PlaySoundA@12'\nのエラーが返ってきていまいます。\n\n -lwinmm オプションを付けましょう。","body":"\u003Cp\u003EWinAPIを使って音を鳴らすには PlaySound()を使いますが、\u003Cbr\u003E\nundefined reference to `PlaySoundA@12\u0026#39;\u003Cbr\u003E\nのエラーが返ってきていまいます。\u003C/p\u003E\n\u003Cp\u003E -lwinmm オプションを付けましょう。\u003C/p\u003E\n"}]